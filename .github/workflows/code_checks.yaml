name: Code_Checks

on: [push, pull_request]

jobs:
    tests:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                php:
                    - '8.0'
                    - '8.1'
                    - '8.2'
                    - '8.3'
                dependencies:
                    - 'low'
                    - 'high'
                symfony_version:
                    - "~v5.4.9"
                    - "~v6.3.0"
                exclude:
                    - php: '8.0'
                      dependencies: 'low'
                      symfony_version: "~v6.3.0"
                    - php: '8.0'
                      dependencies: 'high'
                      symfony_version: "~v6.3.0"

        name: PHP ${{ matrix.php }} / Symfony ${{ matrix.symfony_version }} / deps '${{ matrix.dependencies }}' / Ubuntu
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: |
                    echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: php-${{ matrix.php }}-ubuntu-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        php-${{ matrix.php }}-ubuntu-composer-

            -   run: php ./composer-install.php "${{ matrix.symfony_version }}" "${{ matrix.dependencies }}" "--no-interaction --no-progress --prefer-dist"

            -   run: vendor/bin/phpunit

    windows-tests:
        runs-on: windows-2022
        strategy:
            matrix:
                php:
                    - '8.0'

        name: PHP ${{ matrix.php }} tests on Windows
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov
                    extensions: 'curl'

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: |
                    echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: php-${{ matrix.php }}-windows-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        php-${{ matrix.php }}-windows-composer-

            -   run: composer update -a --prefer-dist -n

            -   run: vendor/bin/phpunit

    static_analysis:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                include:
                    - php: '8.1'
                      symfony_version: "~v6.1.0"
                      dependencies: "high"

        name: Static analysis
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none # disable xdebug, pcov

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: |
                    echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: php-${{ matrix.php }}-ubuntu-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        php-${{ matrix.php }}-ubuntu-composer-

            -   run: php ./composer-install.php "${{ matrix.symfony_version }}" "${{ matrix.dependencies }}" "--no-interaction --no-progress --prefer-dist"

            -   run: composer normalize --dry-run

            -   uses: actions/cache@v3
                with:
                    path: .php-cs-fixer.cache
                    key: php-cs-fixer-cache

            -   uses: actions/cache@v3
                with:
                    path: /tmp/phpstan
                    key: phpstan-cache

            -   run: composer crunz:analyze
